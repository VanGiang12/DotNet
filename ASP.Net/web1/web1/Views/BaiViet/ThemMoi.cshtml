@model web1.Models.BaiViet

@{
    ViewBag.Title = "ThemMoi";
    Layout = "~/Views/Shared/LayoutUser.cshtml";
}

<div class="container" style="min-height:60vh; margin:150px auto ">
    <div class="row">
        <div class="col-md-12">
            <h5>
                Thêm mới bài viết
            </h5>
        </div>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <label class="control-label col-md-2">Loại bài viết</label>
                <div class="col-md-10">
                    <select name="idBaiViet" class="form-control">
                        @foreach (var item in new web1.Models.BanHang_TestEntities1().LoaiBaiViets.ToList())
                        {
                            <option value="@item.ID">@item.TenLoai</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(model => model.idBaiViet, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Tên bài viết</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TenBaiViet, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TenBaiViet, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Mô tả</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MoTa, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Ngày viết</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NgayViet, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                    @Html.ValidationMessageFor(model => model.NgayViet, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Người viết</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NguoiViet, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NguoiViet, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                <label class="control-label col-md-2">Hiển thị</label>
                <div class="col-md-10">
                    <div class="checkbox">
                        <input type="checkbox" value="true" name="HienThi" @Html.Raw(Model.HienThi == true ? "checked" : "") />
                        @Html.ValidationMessageFor(model => model.HienThi, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Thứ tự</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ThuTu, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                    @Html.ValidationMessageFor(model => model.ThuTu, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Nội dung</label>
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.NoiDung, new { htmlAttributes = new { @class = "form-control" } })*@
                    <textarea class="form-control" name="NoiDung" id="inputNoiDung"></textarea>
                    @Html.ValidationMessageFor(model => model.NoiDung, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Hình ảnh</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HinhAnh, new { htmlAttributes = new { @class = "form-control", type = "text", onclick = "BrowseSever()" } })
                    @*<a href="" class="btn btn-default btn-sm" onclick="BrowseSever()">Thêm ảnh</a>*@
                    @Html.ValidationMessageFor(model => model.HinhAnh, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>
@section script{
    <script>
        CKEDITOR.replace('inputNoiDung', {
            
                toolbarGroups : [
                    { name: 'document', groups: ['mode', 'document', 'doctools'] },
                    { name: 'clipboard', groups: ['clipboard', 'undo'] },
                    { name: 'editing', groups: ['find', 'selection', 'spellchecker', 'editing'] },
                    //{ name: 'forms', groups: ['forms'] },
                    '/',
                    { name: 'basicstyles', groups: ['basicstyles', 'cleanup'] },
                    { name: 'paragraph', groups: ['list', 'indent', 'blocks', 'align', 'bidi', 'paragraph'] },
                    { name: 'links', groups: ['links'] },
                    { name: 'insert', groups: ['insert'] },
                    '/',
                    { name: 'styles', groups: ['styles'] },
                    { name: 'colors', groups: ['colors'] },
                    { name: 'tools', groups: ['tools'] },
                    { name: 'others', groups: ['others'] },
                    { name: 'about', groups: ['about'] }
                ],

                //removeButtons = 'Form,Checkbox,Radio,TextField,Textarea,Select,Button,ImageButton,HiddenField'
            
        })
           
        function BrowseSever() {
            var finder = new CKFinder();
            finder.selectActionFunction = SetFileField;
            
            finder.popup();
        }

        function SetFileField(url) {
            $("input[name=HinhAnh]").val(url);
        }
    </script>
    }