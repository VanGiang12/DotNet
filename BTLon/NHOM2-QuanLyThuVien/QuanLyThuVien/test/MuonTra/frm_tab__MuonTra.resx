<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAtA8AAAJNU0Z0AUkBTAMBAQAB
        EAEAARABAAEoAQABKAEABP8BCQEACP8BQgFNATYBBAYAATYBBAIAASgDAAGgAwABKAMAAQEBAAEIBgAB
        GRgAAYACAAGAAwACgAEAAYADAAGAAQABgAEAAoACAAPAAQABwAHcAcABAAHwAcoBpgEAATMFAAEzAQAB
        MwEAATMBAAIzAgADFgEAAxwBAAMiAQADKQEAA1UBAANNAQADQgEAAzkBAAGAAXwB/wEAAlAB/wEAAZMB
        AAHWAQAB/wHsAcwBAAHGAdYB7wEAAdYC5wEAAZABqQGtAgAB/wEzAwABZgMAAZkDAAHMAgABMwMAAjMC
        AAEzAWYCAAEzAZkCAAEzAcwCAAEzAf8CAAFmAwABZgEzAgACZgIAAWYBmQIAAWYBzAIAAWYB/wIAAZkD
        AAGZATMCAAGZAWYCAAKZAgABmQHMAgABmQH/AgABzAMAAcwBMwIAAcwBZgIAAcwBmQIAAswCAAHMAf8C
        AAH/AWYCAAH/AZkCAAH/AcwBAAEzAf8CAAH/AQABMwEAATMBAAFmAQABMwEAAZkBAAEzAQABzAEAATMB
        AAH/AQAB/wEzAgADMwEAAjMBZgEAAjMBmQEAAjMBzAEAAjMB/wEAATMBZgIAATMBZgEzAQABMwJmAQAB
        MwFmAZkBAAEzAWYBzAEAATMBZgH/AQABMwGZAgABMwGZATMBAAEzAZkBZgEAATMCmQEAATMBmQHMAQAB
        MwGZAf8BAAEzAcwCAAEzAcwBMwEAATMBzAFmAQABMwHMAZkBAAEzAswBAAEzAcwB/wEAATMB/wEzAQAB
        MwH/AWYBAAEzAf8BmQEAATMB/wHMAQABMwL/AQABZgMAAWYBAAEzAQABZgEAAWYBAAFmAQABmQEAAWYB
        AAHMAQABZgEAAf8BAAFmATMCAAFmAjMBAAFmATMBZgEAAWYBMwGZAQABZgEzAcwBAAFmATMB/wEAAmYC
        AAJmATMBAANmAQACZgGZAQACZgHMAQABZgGZAgABZgGZATMBAAFmAZkBZgEAAWYCmQEAAWYBmQHMAQAB
        ZgGZAf8BAAFmAcwCAAFmAcwBMwEAAWYBzAGZAQABZgLMAQABZgHMAf8BAAFmAf8CAAFmAf8BMwEAAWYB
        /wGZAQABZgH/AcwBAAHMAQAB/wEAAf8BAAHMAQACmQIAAZkBMwGZAQABmQEAAZkBAAGZAQABzAEAAZkD
        AAGZAjMBAAGZAQABZgEAAZkBMwHMAQABmQEAAf8BAAGZAWYCAAGZAWYBMwEAAZkBMwFmAQABmQFmAZkB
        AAGZAWYBzAEAAZkBMwH/AQACmQEzAQACmQFmAQADmQEAApkBzAEAApkB/wEAAZkBzAIAAZkBzAEzAQAB
        ZgHMAWYBAAGZAcwBmQEAAZkCzAEAAZkBzAH/AQABmQH/AgABmQH/ATMBAAGZAcwBZgEAAZkB/wGZAQAB
        mQH/AcwBAAGZAv8BAAHMAwABmQEAATMBAAHMAQABZgEAAcwBAAGZAQABzAEAAcwBAAGZATMCAAHMAjMB
        AAHMATMBZgEAAcwBMwGZAQABzAEzAcwBAAHMATMB/wEAAcwBZgIAAcwBZgEzAQABmQJmAQABzAFmAZkB
        AAHMAWYBzAEAAZkBZgH/AQABzAGZAgABzAGZATMBAAHMAZkBZgEAAcwCmQEAAcwBmQHMAQABzAGZAf8B
        AALMAgACzAEzAQACzAFmAQACzAGZAQADzAEAAswB/wEAAcwB/wIAAcwB/wEzAQABmQH/AWYBAAHMAf8B
        mQEAAcwB/wHMAQABzAL/AQABzAEAATMBAAH/AQABZgEAAf8BAAGZAQABzAEzAgAB/wIzAQAB/wEzAWYB
        AAH/ATMBmQEAAf8BMwHMAQAB/wEzAf8BAAH/AWYCAAH/AWYBMwEAAcwCZgEAAf8BZgGZAQAB/wFmAcwB
        AAHMAWYB/wEAAf8BmQIAAf8BmQEzAQAB/wGZAWYBAAH/ApkBAAH/AZkBzAEAAf8BmQH/AQAB/wHMAgAB
        /wHMATMBAAH/AcwBZgEAAf8BzAGZAQAB/wLMAQAB/wHMAf8BAAL/ATMBAAHMAf8BZgEAAv8BmQEAAv8B
        zAEAAmYB/wEAAWYB/wFmAQABZgL/AQAB/wJmAQAB/wFmAf8BAAL/AWYBAAEhAQABpQEAA18BAAN3AQAD
        hgEAA5YBAAPLAQADsgEAA9cBAAPdAQAD4wEAA+oBAAPxAQAD+AEAAfAB+wH/AQABpAKgAQADgAMAAf8C
        AAH/AwAC/wEAAf8DAAH/AQAB/wEAAv8CAAP/AQABEgL3BO8DBwK8AfAC8QLyAvMG9APzAfIC8QLwAbwD
        BwLvARJ4AAHvAZIBFAFtAbwBCAGZAbwC8AG8AQcCvAeZDxoBbQETAu94AAHvAhUBvAHwAbwDBwLvARwC
        9wGSARwE7QJzARwBcwHtARwBkwKZAQgCGgGfAZoCvQGfARUBEwEHeAAB7wESAfAB7QHsAe8BCQHvARwB
        9wGSAu0I7AHtAesBiwKQAXMBkwKZAxoDvQIcAW0BB3gAAe8BGQHzAfAB6gG7AbwCBwEcAvcF7QHsAZEB
        7ALtApACnQFxAZkDGgK9AsMBuwG5AZgBGwEHeAABBwEZAf8B9gG7AZ0BBwG7ARwB7wEHAbwBBwPvAXMC
        kQFzApkBkAOdAbkB7QEaBcMB9wKWAQgBwwG8eAABBwEZAv8B9AG6AZQB0gG3AbYBHAHxAfQC8wEHAZgB
        ugGYAZkBGwEaAZEBnQOWAbkBGwTDAe8BuQGdAZYCwwG8eAABBwG8A/8B1wGfAeUBtwLnAbYB8AH2AfID
        nQHvAZ8BGgHDAZgBlgOdAZYBnQPDAe8BlgGdAZYBmALDAfB4AAEHAfAB9gL/AdgBeQGfAZoB2AHnAdcB
        twEcAZgDnQGgAZ8BGgKgAZEElgGdAe8BoAGYA5YBkQLDARoB8XgAAbwBGwL/AfYB3gGaAZkBGgG3AecB
        1wG2Ae0DnQGZAcMBoAGfAsMBmQG5BZYBmAG5A5YBmQGfAaABGwHxeAAB8AEbAvYBwwHzAbcBvQEJAbYB
        1wLnAbUBcgGdARwCoAGZAZ8DoAHvAbkDlgKdApYBnQGYAZ8BoAGZARoB8ngAAfEBGwIaARsBwwG3AdgB
        5wG2AdgD1wHRAewBmQGgAZ8BmQWfAe8BuQWWAZ0BmAGfAaACmQEIAfJ4AAHxApkBCAOZAecD1wHYBNcB
        7wKZAXkFnwGZAXIBlgWdAe0FmQHzeAAB8gOZAXgBmQF4AbYD1wLRAdcB3QPvAQkBcwGfA6AB7QKWAZ0B
        ugGdAboBnQGWAbkBkQEcAngBmQHzeAAB8wOZARwBcwKRAQkB7wG2A9cB3AL/AgkBcwF5ApkB7QFxAZYC
        nQHBBJYCnQGQAXMBHAGZAfR4AAHzAZkCeAEcAZEBlgGRAboBwQTXAv8CCQHiAQkB7QIcAZ0BkAGdAeAB
        ugG5AZgBoAEcAXIDkAFyARwBmQH0eAAB9AQcAZEBlgK6AXIB7wEHAQkBBwEJAd0B/wHiAv8B4QHtARwB
        cwFxAZABcQGdAe8DmQF4ARwD7AEcAZkB9HgAAfQDHAFzAe0CkQGdAe0BHAGZAe8B/wIJAeEBGQP/AZ0E
        cwccBXMBBwH/eAAB/wEcAe0BHAVzAe0DHAEZAQkB4gb/AboBcwftB3MB7wH/eAAB/wGSC+wBlwHtAbsB
        CQT/AeEB/wG6AXIN7AHvAfR4AAH/AZIB7AFRAlgBUQHsA3MD7ATtArsBwQPgAZ0NcwHvAfR4AAH/AZIB
        cwH7AX0BVwH7AVgBcgfsAVgB+wFdAewBlwbsAXIF6wFyBOwBHAH0eAAB/wEcAfsBcgK4AZABXQFXBnIB
        WAE7AZYBXAFYAewEcgLrAW4BaQFMAXQBTQFMAW4B6wFyAusB9wHzeAAB/wGZARoBgQKWAbgBcQH7AewD
        6wGuAVgBOwGQAbgBeAFXAewD6wGuAW4CTQEXAU0BdQNNAUwBSwLrAZIB83gAAf8BeQFdAYEDlgG4AXgB
        WAKuAW0BWAH7AZABuAGBAV0BeAFyA64BbgF1ARcBdQFMAUsB7AJLAUwBTQF0AUsBrgGSAfJ4AAH/ARwB
        +wGQBJYBcAH7AXgBcQFYAfsBkAK4AXcBOwFtAXICbQHrAUwBFwFNAUsBbQJxA64BSwFNAUwB6wHtAfJ4
        AAH0Ae0BXQGXAbgDlgG4AXIBXgFXAfsBlgG4AZYBcAFdAXgB6gGuAnEBbgFNARcBTAFtBXECrgJ0AUsB
        7QHxeAAB9AHtAVEB+wGQBJYBgQFcAfsBlgG4AZYBuAF4AVgBkAJxApABTAIXAUwGkAJtAesBTAFuAe0B
        8XgAAfMB7AFtAlgBcASWApABuAGWAbgBdwFeAW0CkAFxApABTAIXAUwGkAFxAZEBbQFpAW4B7AHweAAB
        8gHsAW0B6wFdAX0BgQOWArgBlgG4AZABGgGXAZACcgGQAXIBTgFNAhcBTAFJAnIDkAHqAZABkQFpAW4B
        ugG8eAAB8gHsAUoBbQHrATsBXAFwBZYBcAFdAVcBkARyAkkBTAIXAXUBbQFyApABEgFKAW4BSgHqAUwB
        6wGRAbx4AAHxAewCSgFYAfsBVwGQAbgElgGBAVYB+wGXApABcAGQAnABSwMXAUwBaAFKAW4BTAF1AU0B
        dQFMAUsBkAGRAQd4AAHwAewBEgFXATsBcQG4ApYCuQG4ApYBuAF3AfsBfgFxBJAB6wF0AxcDTQUXAUwB
        bAGuAQd4AAHwAesBEgE7AXIBuAG5Ad8B2wG5AZABlgGBAbgBlgG4AZABWAFcBJEBrgFLAU0HFwF1ATgB
        UwFuAWwBrgEHeAABvAGuAeoBOwFyAbgB6AHfAZABcgL7AV0BeAGWAXABgQGWAfsEkQFxAW0BTAF1BRcB
        WQH7AVkBdAFtAZABrgHveAABBwGuAZEBcwH7AZcBcgFWAVgBXQHsAa4BcwFYAV4D+wF4AXICkQRxAW4B
        bwF1AVMBWQE4AVkBUwFpAeoCbQGRAe94AAEHARMBkAFtAVEBWAFeAVgBUQKuAusCcgPsAnIBnQGRAq4C
        cQLsAesBbgJMAWgB6gFsAYsBrgFtARMB73gAAQcBFAEPAW0B6wFtAusCcwHtCHMBmAGdAZECcgKRAroB
        kQHsAesDrgGzAYsBhgEPARQB73gAAe8BkgEVARMC7AFzAZIBHAGYAQcB7wIcA+8BmQEIAbsBnQa7AQkE
        tQHsAbQB7AHPARQBFQHtAfd4AAFtAe8DBwG8AvAB8QLyAfMC9Aj/AvQB8wLyAfEC8AG8AwcF7wHqeAAB
        QgFNAT4HAAE+AwABKAMAAaADAAEoAwABAQEAAQEFAAEgAQMWAAP//wD/AP8AJAAL
</value>
  </data>
</root>